# RSAGA

In SAGA GIS we have seen how hydrological analysis is done with SAGA GIS. However, the work we did there is not optimal:

* it required manual clicking
* the overall workflow was brocken
* no documentation
* hard to reproduce

We want to change all of this by working with SAGA GIS modules from inside a R Script.



## RSAGA Setup

SAGA has to be installed on your computer and R needs to know where.

```{r}
#| eval: true
#| echo: true
library(RSAGA)
rsaga.env()
```

If for some reason (e.g. working with a university computer) RSAGA throws an error, try the following:

```{r}
#| eval: false
#| echo: true
library(link2GI)
linkSAGA() # wenn Pfad zu SAGA unbekannt
myenv <- rsaga.env(path="C:\\Program Files\\QGIS 3.8\\apps\\saga-ltr")
```

From now on, you will need to include "myenv" everytime you run RSAGA commands (e.g. in rsaga.geoprocessor)

## RSAGA get help
Get to know what modules are available and how to use the modules using rsaga.get.libraries(),
rsaga.get.modules() and rsaga.get.usage()

```{r}
#| echo: true
rsaga.get.libraries()
#if myenv needs to be specified
#rsaga.get.libraries(path=myenv$modules)
```


```{r}
#| echo: true
rsaga.get.modules(libs = "ta_hydrology")
#rsaga.get.modules(lib="ta_hydrology",env=myenv)
```


```{r}
#| echo: true
#| warning: false
#| message: false
rsaga.get.usage(lib = "ta_hydrology", module = "SAGA Wetness Index")
```

## RSAGA: Run modules
Example: Topographic Wetness Index.
Use the help on how to use the module from above (especially on the parameters).

```{r}
#| echo: true
#| eval: false

# raster is required as saga grid (sgrd+sdat)
dem <- rast("dem.tif")
writeRaster(dem, "dem_sgrd.sdat")

params <- list(DEM = "dem_sgrd.sgrd", TWI ="twi")
rsaga.geoprocessor(lib = "ta_hydrology",
                   module = "SAGA Wetness Index",
                   param = params) #,env=myenv

# load results in R and visualize
TWIdat <- rast("twi.sdat")
plot(TWIdat)
```

::::{.column-margin}
:::{.callout-important}
`dem.sgrd` is a file on your computer! NOT an R Object!
:::
::::
Some SAGA modules are easier to execute via wrapper functions (see [https://cran.r-project.org/web/packages/RSAGA/index.html
](https://cran.r-project.org/web/packages/RSAGA/index.html
))

With such a wrapper, the Topographic Wetness Index can be computed like this:

```{r}
#| eval: false
#| echo: true
rsaga.wetness.index(in.dem = "dem_sgrd.sgrd",
                    out.wetness.index = "twi")
```

## Task: SAGA R Workflows
:::{.callout-important}
Create a reproducible workflow with SAGA and RSAGA for flow accumulation from a digital elevation model.

* Fill Sinks
* optional: derive Channel Network and Drainage Basins
* Flow Accumulation

Visualize the results in R.

:::

